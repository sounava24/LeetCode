class Solution {
    public int maxProfit(int[] prices) {
        int n = prices.length;
        int maxProfit = 0;
        int minPrice = Integer.MAX_VALUE;
        
        for (int i = 0; i < n; i++) {
            minPrice = Math.min(minPrice, prices[i]);
            int profit = prices[i] - minPrice;
            maxProfit = Math.max(maxProfit, profit);
        }
        
        return maxProfit;
    }
}
// class Solution {
//     public int maxProfit(int[] prices) {
//         int n=prices.length;
//         int max=0;
//        for(int i=0;i<n;i++){
//         for(int j=i+1;j<n;j++){
//             max=Math.max(max,prices[j]-prices[i]);
//         }
//        }
//        return max;
//     }
// }
